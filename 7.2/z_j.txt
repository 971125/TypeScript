  class 类名{
    //字段
    属性1:string;
    属性2:number;
    //构造函数
    constructor(参数1:string){
      this.字段=参数1;
    }
    //方法
    方法1():string{
      return this.字段1
    }
  }
创建实例对象:
  var/let 对象名 =new 类名(参数...)
类的继承
  class 类名 extends 父类名{
    //类数据成员
  }
类的类型断言除了用as之外,还可以用<>
方法重载和重写
装饰器:类装饰器、方法装饰器、访问器修饰器、属性装饰器、参数装饰器
  方法装饰器传入下3个参数： 
    对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象
    成员的名字
    成员的属性描述符
  属性装饰器传入2个参数:
    对于静态成员来说是类的构造函数，对于实例成员来说是类的原型对象
    成员的名字