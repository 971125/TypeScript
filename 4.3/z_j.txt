迭代器和生成器
  ES6新引入的特征
  迭代器:
    用循环语句迭代数据时，必须初始化一个变量来记录每一迭代在数据集合中的位置
    迭代器是一种特殊对象，具有一些专门为迭代过程设计的专用接口，所有的迭代器对象都
    有一个next()方法，每次调用都返回一个结果对象
    结果对象有两个属性:一个是value，表示下一个要返回的值；另一个是done，是一个布尔值，当没有要返回的值是true
    迭代器还会保存一个内部指针，用来指向当前集合中值的位置，每调用一次next()方法，都会返回下一个可用的值
  生成器:
    是一种返回迭代器的函数，通过function关键字后星号(*)来表示，函数中会用到关键字(yield)
     定义: function * 函数名(){}
     let 函数名 = function * (){}
  所有的集合对象(数组)和字符串都有默认的迭代器(Symbol.iterator)
  